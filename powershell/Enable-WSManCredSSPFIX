<#
Fix for when trying to remote into a (non-domain joined) HyperV server

If it's still being a little bitch, then run this on the hyperv server:

set-item WSMan:\localhost\Client\TrustedHosts "*"
Enter-PSSession -ComputerName 192.168.1.95 -Credential srv-hyperv\administrator
Enable-WSManCredSSP -Role server
#>

$UserName = ".\Administrator"
$RemotePassword = "PASSWORD"
$RemoteHostname = "192.168.1.46"

#Create Credential variable
$Password = ConvertTo-SecureString $RemotePassword -AsPlainText -Force
$Credential = New-Object System.Management.Automation.PSCredential("$UserName",$Password)

# Test Connection
if(!(Test-WsMan -Authentication Credssp -ComputerName "$RemoteHostname" -Credential $Credential -ErrorAction SilentlyContinue))
{
    # Try to Enable-WSManCredSSP - If failed (can happen) will do it directly on registry keys
    try {
        $credSSP = Enable-WSManCredSSP -Role "Client" -DelegateComputer "*" -Force -ErrorAction SilentlyContinue
    }
    catch { "" }
    if(!($credSSP)){
        $key = @("wsman/*")
        $mainpath = 'hklm:\SOFTWARE\Policies\Microsoft\Windows\CredentialsDelegation'
        if (!(Test-Path $mainpath)) {
            mkdir $mainpath
        }
        $AllowFreshCredentials = Get-ItemProperty -Path $mainpath  | where-Object {$_.AllowFreshCredentials -eq "1"}
        $AllowFreshCredentialsNTML = Get-ItemProperty -Path $mainpath  | where-Object {$_.AllowFreshCredentialsWhenNTLMOnly -eq "1"}
        if (!$AllowFreshCredentials){
            New-ItemProperty -Path $mainpath -Name AllowFreshCredentials -Value 1 -PropertyType Dword -Force
        }
        if (!$AllowFreshCredentialsNTML){
            New-ItemProperty -Path $mainpath -Name AllowFreshCredentialsWhenNTLMOnly -Value 1 -PropertyType Dword -Force
        }  
        $keypath = Join-Path $mainpath 'AllowFreshCredentials'
        $keypath2 = Join-Path $mainpath 'AllowFreshCredentialsWhenNTLMOnly'
        if (!(Test-Path $keypath)) {
            mkdir $keypath
        }
        if (!(Test-Path $keypath2)) {
            mkdir $keypath2
        }
        #create new Items for every object in keys
        $i = 1
        $key | ForEach-Object {
            New-ItemProperty -Path $keypath -Name $i -Value $_ -PropertyType String -Force
            New-ItemProperty -Path $keypath2 -Name $i -Value $_ -PropertyType String -Force
            $i++
        }
        #wait for write registry keys - not necessary
        Start-Sleep -Seconds 1
        #Enable WSManCredSSP second try
        Enable-WSManCredSSP -Role "Client" -DelegateComputer "*" -Force -ErrorAction SilentlyContinue
    }
}

<# Undo Script

# Disable CredSSP
Disable-WSManCredSSP -Role "Client"

# Remove registry changes made by the original script
$mainpath = 'hklm:\SOFTWARE\Policies\Microsoft\Windows\CredentialsDelegation'
if (Test-Path $mainpath) {
    # Remove the registry keys
    Remove-Item -Path $mainpath -Recurse -Force
}

# Remove any leftover WSMan CredSSP configuration
Remove-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\WSMAN\Client\CredentialDelegation" -Name "AllowFreshCredentials" -ErrorAction SilentlyContinue
Remove-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\WSMAN\Client\CredentialDelegation" -Name "AllowFreshCredentialsWhenNTLMOnly" -ErrorAction SilentlyContinue

#>
