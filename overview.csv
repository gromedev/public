"Page Name","Original Requirement","CSVs Needed","Attributes Required","Feasibility Level","Complete Feasibility Analysis","Technical Implementation Details","Data Collection Requirements","Operational Challenges","Business Value","Strategic Category","Recommended Phase","Estimated Days"
"Landing Page Statistics","Landing page: general statistics, total counts, combinations with active, enabled, count of permissions, trends diagram for count, active, enabled, next to it, a line diagram showing these numbers changes the last 6 months. With a clear change midway (where an imaginative cleanup was done)","GIAM-ADUsers-BasicData (multiple dates), GIAM-EntraUsers-BasicData (multiple dates), GIAM-EntraUsers-Permissions (multiple dates)","UserIdentifier (linking field), Enabled (AD), accountEnabled (Entra), ActiveRoles, EligibleRoles (for permission counts), Date stamps for historical comparison","HIGHLY FEASIBLE","This is straightforward in Power BI. Your existing CSV structure supports all required metrics. Historical trends require importing multiple dated files, which Power BI handles well. The cleanup event can be shown as a clear inflection point in line charts.","Use DAX measures for counts and time intelligence functions for trends. Create calculated measures like Total Users = DISTINCTCOUNT(ADUsers[UserIdentifier]), Enabled Users = CALCULATE([Total Users], ADUsers[Enabled] = 1), Admin Users = CALCULATE(DISTINCTCOUNT(EntraPermissions[UserIdentifier]), EntraPermissions[ActiveRoles] <> BLANK()). Line charts will show clear before/after cleanup story with inflection point at cleanup date.","Uses existing CSV structure. No new data collection required. Need 6 months of historical files to show proper trends. Import multiple dated versions of same CSV types.","None - all data already available in existing collection system","Executive dashboard showing total user counts, active/enabled status, permission distribution with clear before/after cleanup story demonstrating governance maturity","Immediately Achievable","PHASE 1","2-3"
"Service Accounts Analysis","page with service accounts: Cheese with current count of suspected/confirmed service accounts detected in AD, next to it, a line diagram showing these numbers changes the last 6 months. With a clear rise in confirmed midway (where an imaginative cleanup was done)","GIAM-ADUsers-BasicData (multiple dates), GIAM-ADUsers-GroupInfo (for service account group memberships)","UserIdentifier (for pattern matching svc-*, sql*, admin*, etc.), ExtensionAttribute2 (for service account categorization), TrustedForDelegation (service account indicator), PasswordNeverExpires (service account characteristic), Group memberships to Service-Accounts groups","HIGHLY FEASIBLE","Service account detection works well with pattern matching in Power BI DAX. Your ExtensionAttribute2 field can distinguish suspected vs confirmed. Historical tracking shows the confirmation process over time.","Use CONTAINSSTRING and SEARCH functions for pattern detection. Create measures like Suspected Service Accounts = CALCULATE(DISTINCTCOUNT(ADUsers[UserIdentifier]), OR(ADUsers[UserIdentifier] LIKE ""svc-*"", ADUsers[TrustedForDelegation] = 1, ADUsers[PasswordNeverExpires] = 1)). Confirmed Service Accounts uses ExtensionAttribute2 patterns. Historical line chart shows progression from suspected to confirmed management.","ExtensionAttribute2 needs to be populated to distinguish suspected vs confirmed service accounts. Historical data shows progression from unmanaged to managed state. Current system already collects this field.","May need manual validation of service account identification rules. Service account naming conventions may not be consistent across organization.","Security team visibility into service account inventory and management maturity over time. Critical for compliance and attack surface reduction.","Immediately Achievable","PHASE 1","3-4"
"Single User Cross-Landscape","page with single user search: cross landscape integrity of user all accounts, HR, IAM, AD, Entra, PAM, graphic showing green/red flag on each system if user is provisioned and in good order e.g. enabled and used recentlyâ€¦ maybe more","GIAM-ADUsers-BasicData, GIAM-EntraUsers-BasicData, GIAM-HRAPI, GIAM-PAM-Accounts (NEW), GIAM-Sailpoint-Accounts (NEW)","UserIdentifier (cross-system linking), Enabled status in each system, LastLogonTimestamp (AD), LastSignInDateTime (Entra), HR employment status, PAM account status and last checkout, Sailpoint sync status and compliance score","MODERATELY FEASIBLE","User search functionality works well in Power BI with slicers. Red/green status indicators are straightforward with conditional formatting. Main challenge is obtaining PAM and IAM system data. Need to create lookup tables for system health status.","Create user slicer for search functionality. Use conditional formatting for red/green status indicators based on system health rules. Need calculated columns like AD_Status = IF(AND(ADUsers[Enabled] = 1, ADUsers[LastLogonTimestamp] > TODAY()-90), ""Green"", ""Red""). Similar logic for each system. Create master user health scorecard.","Requires creating additional CSV files for PAM and Sailpoint data. Need API connections or manual exports from these systems. Must establish data refresh cadence. PAM systems typically have REST APIs. Sailpoint has reporting capabilities.","PAM and Sailpoint systems may not have easy export capabilities. Data freshness becomes critical for accuracy. May need custom connectors. API permissions required for automated data collection.","Single pane of glass for user lifecycle management and cross-system integrity validation. Critical for user access reviews and compliance audits.","Moderately Achievable","PHASE 2","8-10"
"Privileged Accounts","page with privileged accounts: member of server groups, enabled, being used, many groups","GIAM-ADUsers-BasicData, GIAM-ADUsers-GroupInfo, GIAM-EntraUsers-Permissions","UserIdentifier, Enabled status, LastLogonTimestamp and LogonCount, Group memberships (especially Server-*, Admin-*, Domain Admins), ActiveRoles and EligibleRoles, TrustedForDelegation","HIGHLY FEASIBLE","Your existing data structure fully supports this. Privileged account identification through group patterns and role assignments is straightforward. Activity analysis using logon timestamps works well in Power BI.","Create privileged user identification using group pattern matching and role assignments. Use measures like Privileged Users = CALCULATE(DISTINCTCOUNT(ADGroups[UserIdentifier]), OR(ADGroups[Group] LIKE ""*Admin*"", ADGroups[Group] LIKE ""Server-*"", ADGroups[GroupCategory] LIKE ""*Admin*"")). Activity analysis with LogonCount and LastLogonTimestamp. Risk scoring based on multiple privilege indicators.","All required data exists in current CSV structure. May want to enhance with additional privilege indicators like number of groups per user, privilege escalation paths.","None - can implement immediately with existing data collection","Critical for security team to identify and monitor high-privilege access across environment. Essential for privilege access governance and zero trust initiatives.","Immediately Achievable","PHASE 1","3-4"
"Single Device Search","page with single device search: who has permissions on this device, who is owner, permission granted via which groups, this group is managed in sailpoint (user followed approval workflow)","GIAM-DevicePermissions (NEW), GIAM-ADUsers-GroupInfo, GIAM-Sailpoint-Workflows (NEW)","DeviceName and UserIdentifier, PermissionType (Local Admin, RDP, etc.), GrantedViaGroup, GroupManagedBySailpoint (boolean), WorkflowId and ApprovalStatus, DeviceOwner","MODERATELY CHALLENGING","Requires new data collection for device-level permissions. Most organizations don't have centralized device permission tracking. Would need to collect from local device admin groups, RDP permissions, file share permissions, application-specific permissions. Integration with Sailpoint workflow data adds complexity.","Create device search slicer functionality. Show permission matrix with users, permission types, and granting groups. Use conditional formatting to highlight Sailpoint-managed vs unmanaged permissions. Network diagram visual could show device -> groups -> users relationships. Need device ownership data integration.","Need to implement device scanning solution to collect local admin rights, RDP permissions, and other device-level access. Sailpoint workflow API integration required. Could use PowerShell remoting, WMI queries, or specialized tools like AdminSDHolder scanner. Need device ownership database.","Device scanning across enterprise is operationally complex. Network access to all devices required. Sailpoint API permissions needed. Real-time accuracy challenges. Performance impact on devices during scanning. Firewall/network segmentation may block access.","Device access governance and audit trail for compliance requirements. Critical for insider threat detection and privilege escalation monitoring. Essential for NIST framework compliance.","Most Challenging","PHASE 3","15-20"
"IAM Systems Landscape Health","page with IAM systems landscape health: i.e. delta between systems, e.g. total count compare, other compare e.g. enabled. Show some waves from when an imaginary change/downtime hit a system e.g. sailpoint","GIAM-ADUsers-BasicData (multiple dates), GIAM-EntraUsers-BasicData (multiple dates), GIAM-HRAPI (multiple dates), GIAM-SystemHealth (NEW)","User counts per system per date, Enabled/disabled counts per system, Sync status and last sync timestamp, System availability status, Data quality metrics (missing fields, orphaned accounts)","MODERATELY FEASIBLE","The comparison metrics are achievable with your existing data. Historical waves showing system outages require adding system health monitoring data. Power BI can effectively show deltas between systems and highlight discrepancies.","Create system comparison dashboard with side-by-side metrics. Use variance analysis to show deltas between systems. Wave charts showing system health over time with outage events marked. Calculate data quality scores with measures like Data Completeness = DIVIDE(COUNT(NonBlankFields), COUNT(AllFields)). System sync status indicators with conditional formatting.","Need to add system health monitoring data collection. Could be as simple as sync status logs or as complex as full system monitoring integration. May need to collect from system event logs, monitoring tools, or create custom health check scripts.","System monitoring data may not be readily available. Need to establish baseline metrics for comparison. Data quality rules need to be defined. System owners may not provide health status data readily.","Executive visibility into IAM ecosystem health and data integrity across platforms. Critical for identifying system integration issues and data consistency problems.","Moderately Achievable","PHASE 2","6-8"
"Groups Analysis","Page with groups: empty groups, groups with disabled members, any found local match, show local device names","GIAM-ADUsers-GroupInfo, GIAM-ADUsers-BasicData, GIAM-EntraGroups (if available), GIAM-GroupAnalysis (NEW)","Group names and member counts, Member enabled status, Local device group matching (groups that exist on local devices), Device names where groups are found, Group last modified dates","MODERATELY FEASIBLE","Empty groups and disabled member analysis is straightforward with existing data. Local device group matching requires additional collection from individual devices, which is operationally challenging but technically feasible.","Create group health dashboard showing empty groups, groups with only disabled members, group size distribution. Local device matching requires scanning all domain devices for local groups that match AD group names. Use PowerShell Get-LocalGroup cmdlet or equivalent WMI queries across all devices.","Local device group matching requires scanning all domain-joined devices for local groups that match AD groups. This is technically possible with PowerShell remoting or GPO-deployed scripts but operationally intensive. Need device inventory and network access.","Device access across enterprise required. Performance impact of scanning all devices. Keeping device group data current requires ongoing scanning. May require agent deployment or scheduled task across all devices. Network segmentation may limit access.","Group hygiene and cleanup identification for reducing administrative overhead. Important for security (eliminating unused attack vectors) and operational efficiency.","Moderately Achievable","PHASE 2","10-12"
"High Risk Accounts","Page with high risk accounts found: accounts with AD unrestricted delegation, many priv permissions","GIAM-ADUsers-BasicData, GIAM-EntraUsers-Permissions, GIAM-ADUsers-GroupInfo","TrustedForDelegation (unrestricted delegation), ActiveRoles count and privilege level scoring, Administrative group memberships, PasswordNeverExpires and PasswordLastChange, Account age and last activity","HIGHLY FEASIBLE","Your existing TrustedForDelegation field directly identifies unrestricted delegation accounts. Privilege scoring based on role counts and group memberships is achievable. Risk scoring algorithms work well in Power BI DAX.","Create composite risk score using multiple factors. High Risk Accounts = CALCULATE(DISTINCTCOUNT(ADUsers[UserIdentifier]), OR(ADUsers[TrustedForDelegation] = 1, AdminRoleCount > 3, StalePasswordDays > 180)). Use risk scoring matrix with weighted factors. Create automated flagging for accounts exceeding risk thresholds.","All data exists in current structure. May want to enhance risk scoring algorithm with additional factors like account age, activity patterns, number of systems accessed, geographic access patterns.","Risk scoring algorithm needs to be tuned and validated. False positive management required. Security team needs to define risk thresholds and response procedures.","Security team identification of highest risk accounts requiring immediate attention. Critical for insider threat programs and compliance with security frameworks.","Immediately Achievable","PHASE 1","4-5"
